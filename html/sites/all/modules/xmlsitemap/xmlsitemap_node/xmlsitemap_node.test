<?php
// $Id: xmlsitemap_node.test,v 1.1.2.2 2009/05/03 16:08:35 davereid Exp $

/**
 * @file
 * Unit tests for the xmlsitemap_node module.
 */

class XMLSitemapNodeTestHelper extends XMLSitemapTestHelper {
  protected $admin_user;
  protected $normal_user;
  protected $nodes = array();

  function setUp() {
    parent::setUp('xmlsitemap', 'xmlsitemap_node');

    $this->admin_user = $this->drupalCreateUser(array('administer nodes'));
    $this->normal_user = $this->drupalCreateUser(array('create page content', 'access content'));
    for ($i = 0; $i < 2; $i++) {
      $this->nodes[$i] = $this->drupalCreateNode();
    }
  }

  function assertNodeInSitemap($nid) {
    return $this->assertInSitemap(array('type' => 'node', 'id' => $nid));
  }

  function assertNodeNotInSitemap($nid) {
    return $this->assertNotInSitemap(array('type' => 'node', 'id' => $nid));
  }
}

//class XMLSitemapNodeUnitTest extends DrupalWebTestCase {
//  public static function getInfo() {
//    return array(
//      'name' => 'XML Sitemap node unit tests',
//      'description' => 'Unit tests for the XML Sitemap node module.',
//      'group' => 'XML Sitemap',
//    );
//  }
//
//  function setUp() {
//    parent::setUp('xmlsitemap', 'xmlsitemap_node');
//  }
//}

class XMLSitemapNodeFunctionalTest extends XMLSitemapNodeTestHelper {
  public static function getInfo() {
    return array(
      'name' => 'XML Sitemap Node functional tests',
      'description' => 'Interface tests for the XML Sitemap Node module.',
      'group' => 'XML Sitemap',
    );
  }

  function testMassOperations() {
    $this->drupalLogin($this->admin_user);

    $edit = array(
      'operation' => 'xmlsitemap_exclude',
      'nodes[1]' => 1,
      'nodes[2]' => 2,
    );
    $this->drupalPost('admin/content/node', $edit, t('Update'));

    for ($i = 0; $i < 2; $i++) {
      $this->assertNodeNotInSitemap($this->nodes[$i]->nid);
    }

    $edit = array(
      'operation' => 'xmlsitemap_include',
      'nodes[1]' => 1,
      'nodes[2]' => 2,
    );
    $this->drupalPost('admin/content/node', $edit, t('Update'));

    for ($i = 0; $i < 2; $i++) {
      $this->assertNodeInSitemap($this->nodes[$i]->nid);
    }
  }
}
